- name: debug
  debug:
    msg: "jeste httpde"

- block:
  - name: install policycoreutils
    yum:
      name: policycoreutils-python

  - name: install httpd and php
    yum:
      name:
        - httpd
        - php

  - name: create dirs
    file:
      path: "{{app.value.httpd.user.home}}/httpd/{{item.path}}"
      setype: "{{item.setype|default(omit)}}"
      state: directory
    loop:
      - path: conf
        setype: httpd_config_t
      - path: bin

  - name: create user dirs
    file:
      path: "{{app.value.httpd.user.home}}/httpd/{{item.path}}"
      state: directory
      owner: "{{app.value.httpd.user.user}}"
      group: "{{app.value.httpd.user.group}}"
      setype: "{{item.setype|default(omit)}}"
    loop:
      - path: logs
        setype: httpd_log_t
      - path: var
        setype: var_t
      - path: var/www
        setype: httpd_sys_content_t
      - path: var/www/html
        setype: httpd_sys_content_t
      - path: run
        setype: httpd_var_run_t

  - name: link modules
    file:
      state: link
      path: "{{app.value.httpd.user.home}}/httpd/modules"
      src: /usr/lib64/httpd/modules
      setype: httpd_modules_t
      follow: False

  - name: ports
    seport:
      ports: "{{item}}"
      proto: tcp
      setype: http_port_t
      state: present
    loop: '{{app.value.httpd.configs.ports + app.value.httpd.vhosts|json_query("*.configs.port")}}'

  - name: www secontext
    sefcontext:
      target: '{{app.value.httpd.user.home}}/httpd/var/www(/.*)?'
      setype: httpd_sys_content_t
      state: present

  - name: copy magic file
    template:
      src: "{{item.path}}"
      dest: "{{app.value.httpd.user.home}}/httpd/conf/{{item.path}}"
      setype: "{{item.setype|default(omit)}}"
    loop:
      - path: magic
        setype: httpd_config_t
  - name: copy config file
    template:
      src: "{{item.path}}"
      dest: "{{app.value.httpd.user.home}}/httpd/conf/{{item.path}}"
      setype: "{{item.setype|default(omit)}}"
      validate: "/usr/sbin/httpd -d {{app.value.httpd.user.home}}/httpd/httpd/ -t -f %s"
    loop:
      - path: httpd.conf
        setype: httpd_config_t
    notify:
      - restart httpd

  - name: copy service file
    template:
      src: httpd.service
      dest: "/etc/systemd/system/{{app.value.httpd.user.user}}-httpd-{{app.key}}.service"
    notify:
      - restart httpd

  - meta: flush_handlers

  - name: start httpd
    systemd:
      name: "{{app.value.httpd.user.user}}-httpd-{{app.key}}.service"
      state: started
      enabled: True
      daemon_reload: True


  become: True
